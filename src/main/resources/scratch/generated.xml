<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns="http://www.mulesoft.org/schema/mule/core"
      xmlns:imaps="http://www.mulesoft.org/schema/mule/imaps"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:http="http://www.mulesoft.org/schema/mule/http"
      xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
      xmlns:boxnet="http://www.mulesoft.org/schema/mule/boxnet"
      version="CE-3.3.0"
      xsi:schemaLocation="
    http://www.mulesoft.org/schema/mule/boxnet http://www.mulesoft.org/schema/mule/boxnet/1.0/mule-boxnet.xsd
    http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/3.3/mule-http.xsd
    http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/3.3/mule-scripting.xsd
    http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/3.3/mule.xsd
">
    <imaps:connector name="IMAP" mailboxFolder="${gmail.label}" validateConnections="true"
                     deleteReadMessages="${gmail.archive.messages}"/>
    <flow name="main">
        <imaps:inbound-endpoint host="imap.gmail.com" port="993" user="${gmail.username}" password="${gmail.password}"
                                responseTimeout="10000" connector-ref="IMAP"/>
        <flow-ref name="Extract-Attachments"/>
        <flow-ref name="Write-files-to-Box"/>
    </flow>
    <sub-flow name="Extract-Attachments">
        <expression-transformer>
            <return-argument evaluator="attachments-list" expression="*"/>
        </expression-transformer>
        <scripting:component>
            <scripting:script engine="Groovy">
                <property key="attachmentFilter" value="${save.attachment.types}"/>
                <scripting:text><![CDATA[def files = [];
log.info("extracting attachments...")
if(attachmentFilter==null) {
    attachmentFilter = "*";
}

log.info("filtering attachment content type using: " + attachmentFilter);

org.mule.routing.filters.WildcardFilter filter = new org.mule.routing.filters.WildcardFilter(attachmentFilter);

((java.util.ArrayList)payload).each {
    name = it.name;
    ct = it.contentType;
    if(filter.accept(ct))
    {
        if(name==null) {
            name = org.mule.util.UUID.getUUID() + "." + ct.substring(ct.lastIndexOf("/")+1);
        }

        java.io.File f = new java.io.File(muleContext.configuration.workingDirectory, name);

        org.mule.util.FileUtils.copyStreamToFile(it.inputStream, f);
        files.add(f.getAbsolutePath());
        log.info("Added file: " + f.getAbsolutePath());
     }
     else {
        log.warn("Attachment rejected: " + ct);
     }
 }
message.setSessionProperty("files", files);
result = payload;]]></scripting:text>
            </scripting:script>
        </scripting:component>
        <logger message="Files to upload: #[sessionVars['files']]" level="INFO"/>
    </sub-flow>
    <flow name="Boxnet-init-Authenticate">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}" path="boxauth"/>
        <boxnet:get-ticket config-ref="Boxnet"/>
        <scripting:component>
            <scripting:script engine="Groovy">
                <scripting:text><![CDATA[url = "https://www.box.net/api/1.0/auth/" + payload;
if( !java.awt.Desktop.isDesktopSupported() ) {
    result = "Desktop is not supported on this platform, you'll need to go to the following URL in a browser before you can use this app: " + url + "\n\n";
} else {
    java.awt.Desktop desktop = java.awt.Desktop.getDesktop();
    if( !desktop.isSupported( java.awt.Desktop.Action.BROWSE ) ) {
        result = "This desktop does not support the browse action, you'll need to go to the following URL in a browser manually before you can use this app: " + url + "\n\n";
    } else {
        desktop.browse( new java.net.URI( url ) );
    }
}]]></scripting:text>
            </scripting:script>
        </scripting:component>
    </flow>
    <flow name="Boxnet-init-getAuthToken-callback">
        <http:inbound-endpoint exchange-pattern="request-response" host="localhost" port="${http.port}"
                               path="authtoken"/>
        <boxnet:auth-token config-ref="Boxnet"/>
        <set-payload value="Authenitcation complete: #[message.payload]"/>
        <http:response-builder status="200" contentType="text/plain"/>
    </flow>
    <boxnet:config name="Boxnet" apiKey="${boxnet.api.key}"/>
    <sub-flow name="Write-files-to-Box">
        <expression-filter expression="#[sessionVars['files'].size() &gt; 0]"/>
        <boxnet:upload-files config-ref="Boxnet">
            <boxnet:paths ref="#[sessionVars['files']]"/>
        </boxnet:upload-files>
    </sub-flow>
</mule>